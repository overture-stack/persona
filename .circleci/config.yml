# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
# Required environment variables:
# PERSONA_DEPLOY_HOST_FINGERPRINT=results of ssh-keyscan
# PERSONA_DEPLOY_HOST=
# PERSONA_DEPLOY_USER=
# PERSONA_DEPLOY_PATH=
version: 2
jobs:
  build-job:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.9.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/mongo:3.5.11
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      # run tests!
      - run: yarn test
  deploy-job:
    docker:
      - image: circleci/node:8.9.1
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          - v1-dependencies-
      - run:
          name: Install project dependencies
          command: yarn install
      - run:
          name: Install rsync
          command: sudo apt install -y rsync
      - run:
          name: Add deploy-target fingerprint to known_hosts
          command: echo "$PERSONA_DEPLOY_HOST_FINGERPRINT" >> ~/.ssh/known_hosts
      - run:
          name: Deploy
          command: rsync -avhrz --exclude=.env --exclude=logs/ --exclude=.git/ . $PERSONA_DEPLOY_USER@$PERSONA_DEPLOY_HOST:$PERSONA_DEPLOY_PATH
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
workflows:
  version: 2
  build-deploy:
    jobs:
      - build-job
      - deploy-job:
          requires:
            - build-job
          filters:
            branches:
              only:
                - master
